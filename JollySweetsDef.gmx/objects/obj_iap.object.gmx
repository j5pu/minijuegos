<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var next, queue;
queue = iap_event_queue(); // Get the current state of changed IAP transactions
repeat(ds_queue_size(queue)) // For each changed transaction
   {
   next = ds_queue_dequeue(queue); //Check the next purchase in the list
   if next == 0
      {
      if iap_is_purchased("noads")
         {
         global.ads = false;
         global.purchased = true;
         ads_disable(0);
         ads_disable(1);
         if (os_type == os_ios)
         {
          
            ini_open("SaveGame.sav");
            
            ini_write_real("BUY", "BUY", 1);
            ini_close();
         }
        
         }
      }
   //You may want to add additional checks here for other purchases if you have them
   }  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.ads = true;
if(os_type != os_ios)
{ 
    purchaseList = ds_list_create();
    
    purchaseNoAds = ds_map_create();
    ds_map_add(purchaseNoAds,"id","noads");
    ds_map_add(purchaseNoAds,"title","No Ads");
    
    ds_list_add(purchaseList,purchaseNoAds);
    
    iap_activate(purchaseList);
    
    ds_map_destroy(purchaseNoAds);
    ds_list_destroy(purchaseList);
    
    iap_restore_all();

    if(!iap_is_purchased("noads"))
    {
     
        global.ads = true;
        
    }
    else
    {
       
        global.ads = false;
        
        instance_destroy();
    }
}else
{
    ini_open("SaveGame.sav");   
    
    var noads =  ini_read_real("BUY","BUY",0);
    if (noads == 1)
    {  
        global.ads = false;
        
    }else
    {
         
         global.ads = true;
    }
    
    ini_close();

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
